#!/usr/bin/env node

const fs = require('fs/promises');
const path = require('path');

const CONTENT_DIR = path.join(__dirname, '..', 'src', 'content');
const OUTPUT_PATH = path.join(__dirname, '..', 'public', 'trial-manifest.js');

async function main() {
  const entries = await readContentFiles();
  const manifest = buildManifest(entries);
  await writeManifest(manifest);
  console.log(`Wrote ${entries.length} entries to ${path.relative(process.cwd(), OUTPUT_PATH)}`);
}

async function readContentFiles() {
  let files;
  try {
    files = await fs.readdir(CONTENT_DIR, { withFileTypes: true });
  } catch (error) {
    if (error.code === 'ENOENT') {
      throw new Error(`Content directory not found: ${CONTENT_DIR}`);
    }
    throw error;
  }

  return files
    .filter((entry) => entry.isFile() && entry.name.endsWith('.js'))
    .map((entry) => entry.name)
    .sort()
    .map((name) => `src/content/${name}`);
}

function buildManifest(entries) {
  const header = '// Auto-generated by scripts/generate-trial-manifest.js\n';
  const body = `window.JSPsychTrialFiles = ${JSON.stringify(entries, null, 2)};\n`;
  return header + body;
}

async function writeManifest(contents) {
  await fs.mkdir(path.dirname(OUTPUT_PATH), { recursive: true });
  await fs.writeFile(OUTPUT_PATH, contents, 'utf8');
}

main().catch((error) => {
  console.error(error);
  process.exit(1);
});
